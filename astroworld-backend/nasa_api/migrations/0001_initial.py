# Generated by Django 5.2.6 on 2025-10-03 17:31

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='APOD',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('nasa_id', models.CharField(max_length=255, unique=True)),
                ('date', models.DateField(unique=True)),
                ('title', models.CharField(max_length=255)),
                ('explanation', models.TextField()),
                ('url', models.URLField()),
                ('hdurl', models.URLField(blank=True, null=True)),
                ('media_type', models.CharField(default='image', max_length=20)),
                ('copyright', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'verbose_name': 'Astronomy Picture of the Day',
                'verbose_name_plural': 'Astronomy Pictures of the Day',
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='EPICImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('nasa_id', models.CharField(max_length=255, unique=True)),
                ('identifier', models.CharField(max_length=100)),
                ('caption', models.TextField()),
                ('image_url', models.URLField()),
                ('date', models.DateTimeField()),
                ('centroid_coordinates', models.JSONField(default=dict)),
                ('dscovr_j2000_position', models.JSONField(default=dict)),
                ('lunar_j2000_position', models.JSONField(default=dict)),
                ('sun_j2000_position', models.JSONField(default=dict)),
                ('attitude_quaternions', models.JSONField(default=dict)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Exoplanet',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('nasa_id', models.CharField(max_length=255, unique=True)),
                ('name', models.CharField(max_length=255)),
                ('host_star', models.CharField(max_length=255)),
                ('discovery_method', models.CharField(max_length=100)),
                ('discovery_year', models.IntegerField(blank=True, null=True)),
                ('orbital_period', models.FloatField(blank=True, null=True)),
                ('planet_radius', models.FloatField(blank=True, null=True)),
                ('planet_mass', models.FloatField(blank=True, null=True)),
                ('distance_from_earth', models.FloatField(blank=True, null=True)),
                ('equilibrium_temperature', models.FloatField(blank=True, null=True)),
                ('is_habitable_zone', models.BooleanField(default=False)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MarsRover',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('curiosity', 'Curiosity'), ('opportunity', 'Opportunity'), ('spirit', 'Spirit'), ('perseverance', 'Perseverance'), ('ingenuity', 'Ingenuity')], max_length=50, unique=True)),
                ('landing_date', models.DateField()),
                ('launch_date', models.DateField()),
                ('status', models.CharField(default='active', max_length=20)),
                ('max_sol', models.IntegerField(default=0)),
                ('max_date', models.DateField(blank=True, null=True)),
                ('total_photos', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='NaturalEvent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('nasa_id', models.CharField(max_length=255, unique=True)),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True)),
                ('link', models.URLField(blank=True)),
                ('closed', models.BooleanField(default=False)),
                ('category_id', models.CharField(max_length=50)),
                ('category_title', models.CharField(max_length=100)),
            ],
            options={
                'verbose_name': 'Natural Event',
                'verbose_name_plural': 'Natural Events',
            },
        ),
        migrations.CreateModel(
            name='NearEarthObject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('nasa_id', models.CharField(max_length=255, unique=True)),
                ('name', models.CharField(max_length=255)),
                ('designation', models.CharField(max_length=100)),
                ('is_potentially_hazardous', models.BooleanField(default=False)),
                ('estimated_diameter_min_km', models.FloatField()),
                ('estimated_diameter_max_km', models.FloatField()),
                ('absolute_magnitude', models.FloatField()),
                ('is_sentry_object', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name': 'Near Earth Object',
                'verbose_name_plural': 'Near Earth Objects',
            },
        ),
        migrations.CreateModel(
            name='SpaceWeatherEvent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('nasa_id', models.CharField(max_length=255, unique=True)),
                ('event_type', models.CharField(choices=[('CME', 'Coronal Mass Ejection'), ('FLR', 'Solar Flare'), ('SEP', 'Solar Energetic Particle'), ('MPC', 'Magnetopause Crossing'), ('GST', 'Geomagnetic Storm'), ('IPS', 'Interplanetary Shock'), ('RBE', 'Radiation Belt Enhancement'), ('HSS', 'High Speed Stream'), ('WSA', 'WSA+EnlilSimulation')], max_length=3)),
                ('event_time', models.DateTimeField()),
                ('link', models.URLField()),
                ('summary', models.TextField(blank=True)),
                ('instruments', models.JSONField(default=list)),
                ('linked_events', models.JSONField(default=list)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='APIUsageLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('endpoint', models.CharField(max_length=100)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('response_time', models.FloatField()),
                ('status_code', models.IntegerField()),
                ('error_message', models.TextField(blank=True)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='MarsRoverPhoto',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('nasa_id', models.CharField(max_length=255, unique=True)),
                ('sol', models.IntegerField()),
                ('img_src', models.URLField()),
                ('earth_date', models.DateField()),
                ('camera_name', models.CharField(max_length=50)),
                ('camera_full_name', models.CharField(max_length=255)),
                ('rover', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='photos', to='nasa_api.marsrover')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='NaturalEventGeometry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField()),
                ('coordinates', models.JSONField()),
                ('magnitude_value', models.FloatField(blank=True, null=True)),
                ('magnitude_unit', models.CharField(blank=True, max_length=50)),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='geometries', to='nasa_api.naturalevent')),
            ],
        ),
        migrations.CreateModel(
            name='NEOCloseApproach',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('close_approach_date', models.DateTimeField()),
                ('relative_velocity_kmh', models.FloatField()),
                ('miss_distance_km', models.FloatField()),
                ('orbiting_body', models.CharField(default='Earth', max_length=50)),
                ('neo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='close_approaches', to='nasa_api.nearearthobject')),
            ],
        ),
        migrations.CreateModel(
            name='UserSavedItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('item_type', models.CharField(choices=[('apod', 'APOD'), ('neo', 'Near Earth Object'), ('mars_photo', 'Mars Rover Photo'), ('epic', 'EPIC Image'), ('exoplanet', 'Exoplanet'), ('space_weather', 'Space Weather Event'), ('natural_event', 'Natural Event')], max_length=20)),
                ('item_id', models.CharField(max_length=255)),
                ('saved_at', models.DateTimeField(auto_now_add=True)),
                ('notes', models.TextField(blank=True)),
                ('tags', models.JSONField(default=list)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='saved_nasa_items', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('user', 'item_type', 'item_id')},
            },
        ),
        migrations.CreateModel(
            name='UserTrackedObject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object_type', models.CharField(choices=[('apod', 'APOD'), ('neo', 'Near Earth Object'), ('mars_photo', 'Mars Rover Photo'), ('epic', 'EPIC Image'), ('exoplanet', 'Exoplanet'), ('space_weather', 'Space Weather Event'), ('natural_event', 'Natural Event')], max_length=20)),
                ('object_id', models.CharField(max_length=255)),
                ('notification_enabled', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tracked_objects', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('user', 'object_type', 'object_id')},
            },
        ),
    ]
