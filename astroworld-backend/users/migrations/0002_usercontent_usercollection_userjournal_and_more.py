# Generated by Django 5.2.6 on 2025-10-20 17:50

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('users', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='UserContent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content_type', models.CharField(choices=[('apod', 'Astronomy Picture of the Day'), ('mars_photo', 'Mars Rover Photo'), ('epic', 'Earth EPIC Image'), ('neo', 'Near-Earth Object'), ('exoplanet', 'Exoplanet'), ('space_weather', 'Space Weather Event'), ('news', 'Space News Article'), ('celestial', 'Celestial Object (Skymap)'), ('event', 'Cosmic Event')], max_length=50)),
                ('content_id', models.CharField(max_length=255)),
                ('title', models.CharField(max_length=500)),
                ('description', models.TextField(blank=True, null=True)),
                ('thumbnail_url', models.TextField(blank=True, null=True)),
                ('source_url', models.TextField(blank=True, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('tags', models.JSONField(blank=True, default=list)),
                ('is_favorite', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='saved_content', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'user_content',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='UserCollection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('cover_image', models.TextField(blank=True, null=True)),
                ('is_public', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='collections', to=settings.AUTH_USER_MODEL)),
                ('items', models.ManyToManyField(blank=True, related_name='collections', to='users.usercontent')),
            ],
            options={
                'db_table': 'user_collections',
                'ordering': ['-updated_at'],
            },
        ),
        migrations.CreateModel(
            name='UserJournal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('journal_type', models.CharField(choices=[('note', 'Personal Note'), ('observation', 'Sky Observation'), ('ai_conversation', 'Murph AI Chat'), ('discovery', 'Personal Discovery')], default='note', max_length=50)),
                ('title', models.CharField(max_length=500)),
                ('content', models.TextField()),
                ('coordinates', models.JSONField(blank=True, null=True)),
                ('observation_date', models.DateTimeField(blank=True, null=True)),
                ('location', models.JSONField(blank=True, null=True)),
                ('ai_conversation_data', models.JSONField(blank=True, null=True)),
                ('tags', models.JSONField(blank=True, default=list)),
                ('mood', models.CharField(blank=True, max_length=50, null=True)),
                ('is_public', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('related_content', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='journals', to='users.usercontent')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='journals', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'user_journals',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='UserSubscription',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subscription_type', models.CharField(choices=[('space_weather', 'Space Weather Alert'), ('neo', 'Near-Earth Object Alert'), ('meteor_shower', 'Meteor Shower'), ('eclipse', 'Eclipse'), ('launch', 'Rocket Launch'), ('iss_pass', 'ISS Pass')], max_length=50)),
                ('event_id', models.CharField(max_length=255)),
                ('event_name', models.CharField(max_length=500)),
                ('event_date', models.DateTimeField()),
                ('notify_email', models.BooleanField(default=False)),
                ('notify_in_app', models.BooleanField(default=True)),
                ('notify_before', models.IntegerField(default=24)),
                ('notes', models.TextField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_notified', models.DateTimeField(blank=True, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subscriptions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'user_subscriptions',
                'ordering': ['event_date'],
            },
        ),
        migrations.CreateModel(
            name='UserActivity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('activity_type', models.CharField(choices=[('saved_content', 'Saved Content'), ('created_journal', 'Created Journal'), ('created_collection', 'Created Collection'), ('subscribed_event', 'Subscribed to Event'), ('chat_with_murph', 'Chatted with Murph AI'), ('explored_skymap', 'Explored Skymap'), ('achievement_earned', 'Earned Achievement')], max_length=50)),
                ('description', models.CharField(max_length=500)),
                ('metadata', models.JSONField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='activities', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'user_activities',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['user', 'activity_type'], name='user_activi_user_id_290628_idx'), models.Index(fields=['created_at'], name='user_activi_created_9fa3ca_idx')],
            },
        ),
        migrations.AddIndex(
            model_name='usercontent',
            index=models.Index(fields=['user', 'content_type'], name='user_conten_user_id_1ea9c2_idx'),
        ),
        migrations.AddIndex(
            model_name='usercontent',
            index=models.Index(fields=['user', 'is_favorite'], name='user_conten_user_id_05aa47_idx'),
        ),
        migrations.AddIndex(
            model_name='usercontent',
            index=models.Index(fields=['created_at'], name='user_conten_created_0ad7aa_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='usercontent',
            unique_together={('user', 'content_type', 'content_id')},
        ),
        migrations.AddIndex(
            model_name='usercollection',
            index=models.Index(fields=['user', 'is_public'], name='user_collec_user_id_f8fbd6_idx'),
        ),
        migrations.AddIndex(
            model_name='userjournal',
            index=models.Index(fields=['user', 'journal_type'], name='user_journa_user_id_9e2fea_idx'),
        ),
        migrations.AddIndex(
            model_name='userjournal',
            index=models.Index(fields=['user', 'is_public'], name='user_journa_user_id_98c0b1_idx'),
        ),
        migrations.AddIndex(
            model_name='userjournal',
            index=models.Index(fields=['created_at'], name='user_journa_created_a78ec4_idx'),
        ),
        migrations.AddIndex(
            model_name='usersubscription',
            index=models.Index(fields=['user', 'is_active'], name='user_subscr_user_id_3e4873_idx'),
        ),
        migrations.AddIndex(
            model_name='usersubscription',
            index=models.Index(fields=['event_date'], name='user_subscr_event_d_53ea7c_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='usersubscription',
            unique_together={('user', 'subscription_type', 'event_id')},
        ),
    ]
